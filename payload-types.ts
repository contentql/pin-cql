/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    media: Media;
    blogs: Blog;
    pages: Page;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string;
  name: string;
  slug: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  description_html?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  name: string;
  slug: string;
  layout?:
    | (
        | {
            title: string;
            sub_title: string;
            button_text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'Test1_1';
          }
        | {
            title: string;
            sub_title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'page1';
          }
        | {
            title: string;
            sub_title: string;
            button_text: string;
            description: string;
            background_image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero15';
          }
        | {
            title: string;
            sub_title: string;
            features?:
              | {
                  title: string;
                  sub_title: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'features6_1';
          }
        | {
            title: string;
            sub_title: string;
            heading1: string;
            description1: string;
            light_theme_image1: string | Media;
            dark_theme_image1: string | Media;
            heading2: string;
            description2: string;
            light_theme_image2: string | Media;
            dark_theme_image2: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'features5_1';
          }
        | {
            statistics: {
              integer: number;
              character: string;
              description: string;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'statistic1_1';
          }
        | {
            title: string;
            subtitle: string;
            heading: string;
            points: {
              point: string;
              id?: string | null;
            }[];
            button_text: string;
            background_image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'lnk2_1';
          }
        | {
            title: string;
            sub_title: string;
            background_image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'lnk3_1';
          }
        | {
            title: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'brands1_1';
          }
        | {
            title: string;
            sub_title: string;
            features: {
              title: string;
              description: string;
              feature_image_light: string | Media;
              feature_image_dark: string | Media;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'features2_1';
          }
        | {
            features: {
              s_no: number;
              title: string;
              description: string;
              id?: string | null;
            }[];
            background_image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ct02_2';
          }
        | {
            link1: string;
            link2: string;
            button_text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'templateDesigns';
          }
        | {
            title: string;
            sub_title: string;
            reviews: {
              review: string;
              name: string;
              designation: string;
              reviewer_image: string | Media;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'reviews1_1';
          }
        | {
            title: string;
            ratings: {
              light_theme_image: string | Media;
              dark_theme_image: string | Media;
              rating: number;
              rating_out_of: number;
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'rating1_1';
          }
        | {
            title: string;
            subtitle: string;
            integrations: {
              title: string;
              integration_image: string | Media;
              id?: string | null;
            }[];
            button_text: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'integrations2_1';
          }
        | {
            title: string;
            sub_title: string;
            questions: {
              question: string;
              answer_paragraphs: {
                answer: string;
                id?: string | null;
              }[];
              id?: string | null;
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'faqs3_1';
          }
        | {
            title: string;
            sub_title: string;
            button_text: string;
            background_image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner13_1';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  logo_pink: string | Media;
  logo_pink_white: string | Media;
  logo_white: string | Media;
  product_links: {
    title: string;
    description: string;
    path: string;
    id?: string | null;
  }[];
  explore_path: string;
  resources1_links: {
    title: string;
    description: string;
    path: string;
    id?: string | null;
  }[];
  resources2_links: {
    title: string;
    description: string;
    path: string;
    id?: string | null;
  }[];
  templates_path: string;
  pricing_path: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  logo_pink: string | Media;
  logo_pink_white: string | Media;
  footer_title1: string;
  title1_links: {
    footer_name: string;
    footer_path: string;
    id?: string | null;
  }[];
  footer_title2: string;
  title2_links: {
    footer_name: string;
    footer_path: string;
    id?: string | null;
  }[];
  footer_title3: string;
  title3_links: {
    footer_name: string;
    footer_path: string;
    id?: string | null;
  }[];
  newsletter_title: string;
  copyright_description: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}